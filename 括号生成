# 数字 n 代表生成括号的对数，请你设计一个函数，用于能够生成
# 所有可能的并且 有效的 括号组合。
#
#  示例：
#
#  输入：n = 3
# 输出：[
#        "((()))",
#        "(()())",
#        "(())()",
#        "()(())",
#        "()()()"
#      ]


# leetcode submit region begin(Prohibit modification and deletion)
from typing import List


class Solution:
    def generateParenthesis(self, n: int) -> List[str]:
        def generate(item, left, right, result):
            if left == 0 and right == 0:
                result.append(item)
                return
            if left > 0:
                generate(item + "(", left - 1, right, result)
            if left < right:
                generate(item + ")", left, right - 1, result)
        result = []
        generate("", n, n, result)
        return result


if __name__ == "__main__":
    r = Solution()
    rs = r.generateParenthesis(3)
    print(rs)
# leetcode submit region end(Prohibit modification and deletion)
