# 编写一个程序，通过填充空格来解决数独问题。
#
#  一个数独的解法需遵循如下规则：
#
#
#  数字 1-9 在每一行只能出现一次。
#  数字 1-9 在每一列只能出现一次。
#  数字 1-9 在每一个以粗实线分隔的 3x3 宫内只能出现一次。
#
#
#  空白格用 '.' 表示。
#
#
#
#  一个数独。
#
#
#
#  答案被标成红色。
#
#  提示：
#
#
#  给定的数独序列只包含数字 1-9 和字符 '.' 。
#  你可以假设给定的数独只有唯一解。
#  给定数独永远是 9x9 形式的。
#
#  Related Topics 哈希表 回溯算法
#  👍 718 👎 0


# leetcode submit region begin(Prohibit modification and deletion)
from typing import List


class Solution:
    def solveSudoku(self, board: List[List[str]]) -> None:
        """
        Do not return anything, modify board in-place instead.
        """

        def isvaild(i, j):
            for m in range(9):
                if m != i and board[m][j] == board[i][j]:
                    return False
            for n in range(9):
                if n != j and board[i][n] == board[i][j]:
                    return False
            for m in range(i // 3 * 3, i // 3 * 3 + 3):
                for m in range(j // 3 * 3, j // 3 * 3 + 3):
                    if m != i and n != j and board[m][n] == board[i][j]:
                        return False
            return True

        def f(a, b, board):
            for i in range(a, 9):
                for j in range(b, 9):
                    if board[i][j] == '.':
                        for c in '123456789':
                            board[i][j] = c
                            if isvaild(i, j):
                                if f(a, b, board):
                                    return True
                                else:
                                    board[i][j] = '.'
                            else:
                                board[i][j] = '.'
                        return False
            return True

        f(0, 0, board)

# leetcode submit region end(Prohibit modification and deletion)

