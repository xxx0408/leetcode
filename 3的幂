# 给定一个整数，写一个函数来判断它是否是 3 的幂次方。如果是，返回 true ；
# 否则，返回 false 。
#
#  整数 n 是 3 的幂次方需满足：存在整数 x 使得 n == 3x
#
#
#
#  示例 1：
#
#
# 输入：n = 27
# 输出：true
#
#
#  示例 2：
#
#
# 输入：n = 0
# 输出：false
#
#
#  示例 3：
#
#
# 输入：n = 9
# 输出：true
#
#
#  示例 4：
#
#
# 输入：n = 45
# 输出：false
#
#
#
#
#  提示：
#
#
#  -231 <= n <= 231 - 1


# leetcode submit region begin(Prohibit modification and deletion)
class Solution:
    def isPowerOfThree(self, n):
        x = 1
        while x <= n:
            if x == n:
                return True
            x = x * 3
        return False


if __name__ == "__main__":
    r = Solution()
    rs = r.isPowerOfThree(18)
    print(rs)

# leetcode submit region end(Prohibit modification and deletion)
